version: 2.1

references:
  container_config: &container_config
    machine: true
    working_directory: ~/project

  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo
  
  npm_cache_key: &npm_cache_key
    v1-dependency-npm-{{ checksum "package.json" }}
  npm_backup_cache_key: &npm_backup_cache_key
    v1-dependency-npm

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key
        - *npm_backup_cache_key
  
  start_prisma_server: &start_prisma_server
    run:
      name: Start Prisma server
      command: |
        npm run service
        sleep 20
        npm run deploy
  
  restore_generated_source_files: &restore_generated_source_files
    run:
      name: Restore Generated Source Files
      command: mv /tmp/workspace/src/generated src/generated

  npm_install: &npm_install
    run:
      name: Install Dependencies
      command: npm install

  set_node_version: &set_node_version
    run:
      name: Set Node version
      command: |
        set +e             
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
        export NVM_DIR="/opt/circleci/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install v8.12.0
        nvm alias default v8.12.0
        echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
        echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
        
workflows:
  version: 2
  test-build-deploy:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - lint:
          requires:
            - install_dependencies
      - local_deploy:
          requires:
            - install_dependencies
      - build:
          requires:
            - local_deploy
      - test:
          requires:
            - build

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *npm_install
      - save_cache:
          key: *npm_cache_key
          paths:
            - project/node_modules

  lint:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *npm_install
      - run:
          name: Lint Files
          command: npm run lint

  local_deploy:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_node_modules
      - *set_node_version
      - *npm_install
      - *start_prisma_server
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ~/src/generated

  build:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_node_modules
      - *set_node_version
      - *npm_install
      - *restore_generated_source_files
      - run:
          name: Build Server
          command: npm run build
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ~/dist

  test:
    <<: *container_config
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_node_modules
      - *set_node_version
      - *npm_install
      - *start_prisma_server
      - *restore_generated_source_files
      - run:
          name: Restore Server Files
          command: mv /tmp/workspace/dist ~/dist
      - run:
          name: Start GraphQL Server
          command: npm start
          background: true

      - run:
          name: Wait for GraphQL Server
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 10 http://localhost:4000

      - run: npm run test

